{"version":3,"sources":["Fields/TextField.js","components/Resume/index.js","App.js","serviceWorker.js","index.js"],"names":["TextField","_ref","_ref$textarea","textarea","name","label","rest","Object","objectWithoutProperties","react_default","a","createElement","className","htmlFor","assign","id","Resume","state","fullName","email","mobile","address","city","pincode","careerObjective","mastersDegree","mUniversity","mYear","mPercentage","bachelorsDegree","bUniversity","bYear","bPercentage","highSchoolDegree","hsUniversity","hsYear","hsPercentage","skills","textFieldOnChange","e","_this","setState","defineProperty","target","value","downloadLinkClick","doc","jsPDF","html2canvas","refs","resumeViewerRef","then","canvas","imgData","toDataURL","width","internal","pageSize","getWidth","height","getHeight","addImage","save","concat","err","console","log","style","borderRight","ref","textAlign","color","this","border","cellSpacing","cellPadding","backgroundColor","split","map","v","i","trim","key","charAt","toUpperCase","slice","Fields_TextField","onChange","type","onClick","Component","App","components_Resume","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb1c4d5c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TextField = ({ textarea = null, name, label, ...rest}) => {\r\n    return(\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            {\r\n                (textarea) \r\n                ? <textarea className=\"form-control\" id={name} name={name} {...rest} ></textarea>\r\n                : <input className=\"form-control\" id={name} name={name} {...rest}  />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextField;","import React, { Component } from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport TextField from '../../Fields/TextField';\r\n\r\nclass Resume extends Component {\r\n    state = {\r\n        fullName: \"Deepanshu\",\r\n        email: \"deepanshu@vizexperts.com\",\r\n        mobile: \"8950899905\",\r\n        address: \"abcd colony\",\r\n        city: \"Rohtak\",\r\n        state: \"Haryana\",\r\n        pincode: \"124001\",\r\n        careerObjective: \"Aiming to use my proven customer service, sales, and communication skills to effectively fill the man a gerial role in\tyour company. Possess a BA in Communications.\",\r\n        mastersDegree: \"NA\",\r\n        mUniversity: \"NA\",\r\n        mYear: \"00\",\r\n        mPercentage: \"0%\",\r\n        bachelorsDegree: \"BTECH\",\r\n        bUniversity: \"MDU\",\r\n        bYear: \"2015\",\r\n        bPercentage: \"85%\",\r\n        highSchoolDegree: \"VPS\",\r\n        hsUniversity: \"CBSE\",\r\n        hsYear: \"2011\",\r\n        hsPercentage: \"75%\",\r\n        skills: \"java, react\"\r\n    };\r\n\r\n    textFieldOnChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    } \r\n\r\n    downloadLinkClick = () => {\r\n        let doc = new jsPDF('p', 'mm', 'a4');\r\n        html2canvas(this.refs.resumeViewerRef).then(canvas => {\r\n            let imgData = canvas.toDataURL(\"image/png\");\r\n            let width = doc.internal.pageSize.getWidth();\r\n            let height = doc.internal.pageSize.getHeight();\r\n            doc.addImage(imgData, 'PNG', 0, 0, width, height);\r\n            doc.save(`Resume-${this.state.fullName}.pdf`);\r\n        }, err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5\" style={{borderRight: '10px solid #dee2e6'}}>\r\n                        <div ref=\"resumeViewerRef\" className=\"border p-3 mt-3 clearfix\">\r\n                            <div style={{textAlign: 'center'}}>\r\n                                <h2 style={{color: 'blue'}}>{this.state.fullName}</h2>\r\n                                <p>{this.state.address}\r\n                                <br/>\r\n                                {this.state.city}, {this.state.state}, {this.state.pincode}\r\n                                <br/>\r\n                                {this.state.mobile}\r\n                                <br/>\r\n                                {this.state.email}</p>\r\n                                <p><i>{this.state.careerObjective}</i></p>\r\n                            </div>\r\n                            <h3 style={{color: '#20b2aa'}}>Education</h3>\r\n                            <table style={{width: '100%', textAlign: 'center'}} border=\"1\" cellSpacing=\"0\" cellPadding=\"10\">\r\n                                <thead>\r\n                                    <tr >\r\n                                        <th style={{backgroundColor: '#20b2aa', color: '#fff'}}>Course</th>\r\n                                        <th style={{backgroundColor: '#20b2aa', color: '#fff'}}>University</th>\r\n                                        <th style={{backgroundColor: '#20b2aa', color: '#fff'}}>Year of Passing</th>\r\n                                        <th style={{backgroundColor: '#20b2aa', color: '#fff'}}>Percentage</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{this.state.mastersDegree}</td>\r\n                                        <td>{this.state.mUniversity}</td>\r\n                                        <td>{this.state.mYear}</td>\r\n                                        <td>{this.state.mPercentage}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{this.state.bachelorsDegree}</td>\r\n                                        <td>{this.state.bUniversity}</td>\r\n                                        <td>{this.state.bYear}</td>\r\n                                        <td>{this.state.bPercentage}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{this.state.highSchoolDegree}</td>\r\n                                        <td>{this.state.hsUniversity}</td>\r\n                                        <td>{this.state.hsYear}</td>\r\n                                        <td>{this.state.hsPercentage}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <h3 style={{color: \"#20b2aa\"}}>Skills</h3>\r\n                            <ul>\r\n                            {\r\n                                this.state.skills.split(',').map((v, i) => {\r\n                                    v = v.trim();\r\n                                    return (<li key={i}> {v.charAt(0).toUpperCase() + v.slice(1)} </li>);\r\n                                })\r\n                            }\r\n                            </ul>\r\n                            <h3 style={{color: \"#20b2aa\"}}>DECLARATION</h3>\r\n                            <p>I here by declare that the information furnished above is true to the best of my knowledge.</p>\r\n                            <p style={{textAlign: 'right'}}>({this.state.fullName})</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-7 p-3\">\r\n                        <h4>Resume</h4>\r\n                        <br/>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <TextField label=\"Full Name\" name=\"fullName\" value={this.state.fullName} onChange={this.textFieldOnChange} />\r\n                            </div>\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <TextField label=\"Email\" name=\"email\" value={this.state.email} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-4\">\r\n                                <TextField label=\"Mobile\" name=\"mobile\" value={this.state.mobile} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <TextField textarea label=\"My career objective\" name=\"careerObjective\" value={this.state.careerObjective} onChange={this.textFieldOnChange}/>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Masters Degree\" name=\"mastersDegree\" value={this.state.mastersDegree} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Year\" name=\"mYear\" value={this.state.mYear} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"University\" name=\"mUniversity\" value={this.state.mUniversity} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Percentage\" name=\"mPercentage\" value={this.state.mPercentage} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Bachelors Degree\" name=\"bachelorsDegree\" value={this.state.bachelorsDegree} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Year\" name=\"bYear\" value={this.state.bYear} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"University\" name=\"bUniversity\" value={this.state.bUniversity} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Percentage\" name=\"bPercentage\" value={this.state.bPercentage} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"HighSchool Degree\" name=\"highSchoolDegree\" value={this.state.highSchoolDegree} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Year\" name=\"hsYear\" value={this.state.hsYear} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"University\" name=\"hsUniversity\" value={this.state.hsUniversity} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Percentage\" name=\"hsPercentage\" value={this.state.hsPercentage} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <TextField label=\"Skills (Upto 5, seperated by ',')\" name=\"skills\" value={this.state.skills} onChange={this.textFieldOnChange}/>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Address\" name=\"address\" value={this.state.address} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"City\" name=\"city\" value={this.state.city} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"State\" name=\"state\" value={this.state.state} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <TextField label=\"Pincode\" name=\"pincode\" value={this.state.pincode} onChange={this.textFieldOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row justify-content-end\">\r\n                            <div className=\"col-auto\">\r\n                                <button className=\"btn btn-primary btn-sm mr-3\" type=\"button\" onClick={this.downloadLinkClick}>Download PDF</button>\r\n                                <button className=\"btn btn-success btn-sm\" type=\"submit\">Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume;","import React from 'react';\nimport Resume from './components/Resume';\n\nconst App = () => (<Resume />);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}